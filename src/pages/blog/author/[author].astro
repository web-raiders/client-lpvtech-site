---
import { Layout, Common} from "@components/index"
import { Constants, Queries } from "@utils/index";
import type { CollectionEntry } from "astro:content";
import { sanityClient } from "sanity:client";
import { Tools } from "@utils/index";


const { author } = Astro.params;
if(author === undefined){
    throw new Error('Author is required')
}
const articles: CollectionEntry<'blog'>[] = await sanityClient.fetch(Queries.articles)
const authorArticles = articles.filter((article: any) => article.author === Tools.formatName(author))
const currentPage: number | null = +Astro.url.searchParams.get('page')! || 1;
const totalPages: number = Math.ceil(authorArticles.length / Constants.ARTICLES_PER_PAGE);
const articlesInPage: CollectionEntry<'blog'>[] = authorArticles.slice((currentPage - 1) * Constants.ARTICLES_PER_PAGE, currentPage * Constants.ARTICLES_PER_PAGE)

---

<Layout>

    <!-- Hero Section -->
    <section class="pt-32 md:pt-42 lg:pt-48 w-full min-h-[40vh] smm:min-h-[30vh] md:min-h-[35vh] lg:min-h-[40vh] bg-no-repeat bg-cover bg-center" style={{ backgroundImage: `linear-gradient(rgba(0, 23, 23, 0.7), rgba(0, 23, 23, 0.7)), url(${authorArticles[0].image})`}}>
        <div class="w-full md:w-2/5 mx-auto text-center">
            <h1 class="text-[32px] md:text-[48px] text-white font-bold">{Tools.formatName(author)}</h1>
        </div>
    </section>

    <!-- Articles Section -->
    <section class="w-full min-h-screen md:min-h-[50vh] py-10 xl:py-20">
        <Common.Container flex="flex-col">
            <!-- <a href="/blog" class="inline-block bg-gray-100 p-2 mb-6 hover:bg-indigo-500 hover:text-white">Back To Articles</a> -->
            <Common.Button path="/blog" text="Back to blog" className=`block w-[max-content] py-1.5 px-3 text-base text-center text-white text-[14px] bg-[#0fcc7c] rounded-md baseline hover:bg-darkBlue` />
            <!-- Main Grid -->
            <div class="grid grid-cols-1 gap-10 md:grid-cols-2 xl:grid-cols-3 mt-10">
                <!-- Article Card -->
                {articlesInPage.map((article: any) => (
                  <Common.Article article={article} />
                ))}
            </div>
            <div class="w-full mt-5">
                <Common.Pagination currentPage={currentPage} totalPages={totalPages} disablePrevious={currentPage === 1} disableNext={currentPage === totalPages} />
            </div>
        </Common.Container>
    </section>
</Layout>